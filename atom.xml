<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kimtsonの部落格</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-11-03T16:44:12.005Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>KimTson</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PLC1200学习</title>
    <link href="http://example.com/2021/11/01/PLC1200%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2021/11/01/PLC1200%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-11-01T02:12:17.170Z</published>
    <updated>2021-11-03T16:44:12.005Z</updated>
    
    <content type="html"><![CDATA[<h1 id="S7-1200的整体介绍"><a href="#S7-1200的整体介绍" class="headerlink" title="S7-1200的整体介绍"></a>S7-1200的整体介绍</h1><ol><li>自身带以太网口（无串口），可上传可下载可通信</li><li>集成化</li><li>集成了输入点（I）输出点（Q）</li><li>高速输入，高速输出（1MHz）</li><li>扩展：PLC1200可以添加扩展模块，原本的CPU1个，原本的左边部分可以添加3个，右边部分8个（8+3+1）</li><li>PLC的电源有交流有直流</li></ol><h1 id="SIMATIC-S7-1200的命名规则"><a href="#SIMATIC-S7-1200的命名规则" class="headerlink" title="SIMATIC S7-1200的命名规则"></a>SIMATIC S7-1200的命名规则</h1><p><img src="https://i.loli.net/2021/11/02/17O2bHtuURAaDMv.png" alt="命名规则"></p><h1 id="SIMATIC-S7-1200的硬件接线"><a href="#SIMATIC-S7-1200的硬件接线" class="headerlink" title="SIMATIC S7-1200的硬件接线"></a>SIMATIC S7-1200的硬件接线</h1><p><strong>分类：</strong>1. AC/DC/RLY                 2. DC/DC/RLY                 3. DC/DC/DC</p><ol><li>供电电源：AC 220v DC 240v（AC为交流，AD为直流）</li><li>输入信号（负载）：DC24V</li><li>输出信号（负载）：DLY（继电器类型）、DC（晶体管类型）</li></ol><p><strong>输入：</strong>1. 传感器               2. 按钮                   3.限位开关          </p><p><strong>输入：</strong>1. 指示灯                2.中间继电器        3.接触器</p><p><strong>硬件接线总结：</strong></p><ol><li>所有按钮一段接I点，另一端和公共短M点之间接直流24V电源</li><li>传感器NPN类，公共端M接0V</li><li>继电器型输出的Q点接24—220V交直流负载均可，公共端L和负载线圈之间对应的电压即可，政府军没有固定要求，常规L接正或者火线</li><li>晶体管输出型的Q点只能接直流24V的负载，正负极接线固定，不可接反</li></ol><h1 id="博图软件安装"><a href="#博图软件安装" class="headerlink" title="博图软件安装"></a>博图软件安装</h1><p><strong>具体百度或者谷歌</strong></p><p>B站视频：<a href="https://www.bilibili.com/video/av846885772?p=6&amp;spm_id_from=pageDriver">https://www.bilibili.com/video/av846885772?p=6&amp;spm_id_from=pageDriver</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;S7-1200的整体介绍&quot;&gt;&lt;a href=&quot;#S7-1200的整体介绍&quot; class=&quot;headerlink&quot; title=&quot;S7-1200的整体介绍&quot;&gt;&lt;/a&gt;S7-1200的整体介绍&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;自身带以太网口（无串口），可上传可下载可通信&lt;/</summary>
      
    
    
    
    
    <category term="学习心得" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97/"/>
    
    <category term="学习路线" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>Java学习路线</title>
    <link href="http://example.com/2021/10/14/Java%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    <id>http://example.com/2021/10/14/Java%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</id>
    <published>2021-10-14T07:26:02.097Z</published>
    <updated>2021-11-09T16:21:09.367Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p><strong>Java 是什么？</strong></p><ul><li>Java 是美国Sun公司在199年推出的计算机编程语言，后来被Oracle公司收购。</li><li>Java早起被称为Oak（橡树），后改名为Java。</li><li>Java之父詹姆斯·高斯林(James Gosling)。</li></ul><p><strong>为何是Java？</strong></p><ul><li><p>世界最流行编程语言之一，在国内使用广泛。</p></li><li><p>可移植性好、安全可靠、性能较好。</p></li><li><p>开发社区完善，功能丰富。</p></li></ul><p><strong>Java能做什么？</strong></p><ul><li>桌面应用开发：各种税务管理软件、IDEA</li><li>==企业级应用开发==：微服务、大型互联网应用</li><li>移动应用开发：Android、医疗设备</li><li>服务器系统：应用的后台</li><li>大数据开发：hadoop</li><li>游戏开发：我的世界</li></ul><p><strong>Java技术体系平台</strong></p><table><thead><tr><th align="center">技术平台</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><strong>Java SE标准版</strong></td><td align="center"><strong>Java技术核心基础，学习Java EE和Java ME的基础支持Windows的Java桌面平台</strong></td></tr><tr><td align="center"><strong>Java EE企业版</strong></td><td align="center"><strong>为开发企业环境下的应用程序提供一套解决方案，主要针对Web应用程序开发，多用于大型网站开发，需要后期学习</strong></td></tr><tr><td align="center"><strong>Java ME小型版</strong></td><td align="center"><strong>为机顶盒，移动电话和PAD之类嵌入式消费电子设备提供的Java语言平台</strong></td></tr><tr><td align="center"><strong>Java Card</strong></td><td align="center"><strong>支持一些Java小程序运行在小内存设备的平台，如sim卡</strong></td></tr></tbody></table><h1 id="开发环境的准备"><a href="#开发环境的准备" class="headerlink" title="开发环境的准备"></a>开发环境的准备</h1><p><strong>如何使用？</strong></p><p>Java语言的产品是JDK（Java开发者工具包），需要安装JDK才可用Java语言。</p><p><strong>如何获取JDK</strong></p><p>去甲骨文官网下载（Google一下就出来了）<a href="https://www.oracle.com/java/technologies/downloads/">https://www.oracle.com/java/technologies/downloads/</a></p><p><strong>如何看是否安装成功JDK?</strong></p><p>cmd打开你的控制台，输入 <code>javac -version</code> 查看javac版本，输入<code>java -version</code>查看Java版本</p><p><strong>cmd常见命令</strong></p><table><thead><tr><th>常用命令</th><th>作用</th></tr></thead><tbody><tr><td>D：</td><td>切换到D盘下</td></tr><tr><td>dir</td><td>查看当前路径下全部内容</td></tr><tr><td>cd 目录</td><td>进入单极目录</td></tr><tr><td>cd 盘符：\目录1\目录2\目录3</td><td>进入多级目录</td></tr><tr><td>cd ..</td><td>退回上一目录</td></tr><tr><td>cls</td><td>清屏</td></tr><tr><td>exit</td><td>退出命令行显示窗口</td></tr><tr><td>cd \</td><td>退回盘符目录</td></tr></tbody></table><h1 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h1><p><strong>在记事本打出代码如下：</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">helloworld</span></span>&#123;</span><br><span class="line">          <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;Hello,World&quot;</span>);</span><br><span class="line">          &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着在存放java源文件的文件夹下开启cmd，运行：<code>javac helloworld.java</code>，运行完毕目录文件下会生成一个叫helloworld.class的文件。</p><p><img src="https://i.loli.net/2021/10/14/cIRDsGiqObEMfzZ.jpg" alt="结果如图"></p><p><strong>常见错误如下：</strong></p><ol><li>扩展名已被隐藏</li><li>文件名和类名（class的那个）不一致</li><li>大小写错误，单词拼写错误，存在中文符号，找不到main方法</li><li>括号不匹配</li><li>编译或执行命令使用不当</li></ol><h1 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h1><ul><li>IntelliJ IDEA 一般简称为IDEA，是Java编程语言开发的集成环境，在业界被公认为最好的 Java开发工具。</li></ul><p><strong>下载</strong></p><p>由于官方网站下载的专业版（因为咱们需要开发大型项目，社区版虽然免费却比专业版少了许多功能）需要钱，故我选择白嫖：<a href="https://www.exception.site/essay/how-to-free-use-intellij-idea-2019-3">https://www.exception.site/essay/how-to-free-use-intellij-idea-2019-3</a></p><p><strong>用IDEA编写程序</strong></p><p><strong>IDEA项目结构：project（项目）–module（模块）–package（包）–class（类）</strong></p><p><strong>使用步骤：1.创建project空工程 2.创建module模块 3.创建package包 4.创建class                                类 5.在类中写代码 6.完成编译运行</strong></p><p><strong>IDEA快捷键（需要掌握的）</strong></p><table><thead><tr><th>快捷键</th><th>功能效果</th></tr></thead><tbody><tr><td>main/psvm、sout、…</td><td>快捷键入相关代码</td></tr><tr><td>Ctrl+D</td><td>复制当前行数据到下一行</td></tr><tr><td>Ctrl+Y</td><td>删除所在行，建议用Ctrl+X</td></tr><tr><td>Ctrl+ALT＋L</td><td>格式化代码</td></tr><tr><td>ALT＋SHIFT＋⬆，ALT＋SHIFT＋⬇</td><td>上下移动当前代码</td></tr><tr><td>Ctrl＋/，Ctrl＋shift＋/</td><td>对代码进行注释</td></tr></tbody></table><p><strong>导入模块</strong></p><p> 需要找到文件并且找到那个模块的最底的目录文件导进去，这样模块里的代码才能生效，如果直接导入最开始的那个文件名称，那将会出现问题，自从java1.1版本以来，推出简体中文插件，可以去setting里找到相关插件下载重启即可，详情可参阅：<a href="https://blog.jetbrains.com/zh-hans/2020/06/10/intellij-idea-language-pack/">https://blog.jetbrains.com/zh-hans/2020/06/10/intellij-idea-language-pack/</a></p><p><strong>删除模块</strong></p><p>这个建议去磁盘相关位置（软件有提示的）删除即可。</p><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><p>在IDEA中注释分为三种：</p><ol><li><p>多行注释</p><p>语法：<code>//</code>，快捷键：<code>CTRL＋shift＋/</code></p></li><li><p>单行注释</p><p> 语法：<code>/* */</code>，快捷键：<code>CTRL＋/</code></p></li><li><p>文档注释</p></li></ol><p>​         语法：<code>/** */</code></p><h1 id="字面量"><a href="#字面量" class="headerlink" title="字面量"></a>字面量</h1><p>字面量的意思是告诉程序员数据在程序中的书写格式。</p><p><strong>字面量的分类：</strong></p><table><thead><tr><th align="center">字面量类型</th><th align="center">说明</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">整数</td><td align="center">不带小数的数字</td><td align="center">666，-888</td></tr><tr><td align="center">小数</td><td align="center">带小数的数字</td><td align="center">13.14</td></tr><tr><td align="center">字符</td><td align="center">必须使用单引号，有且仅有一个字符</td><td align="center">‘s’</td></tr><tr><td align="center">字符串</td><td align="center">必须使用双引号，内容可有可无</td><td align="center">“hello world”</td></tr><tr><td align="center">布尔值</td><td align="center">表示真假，只有true，false两个值</td><td align="center">true false</td></tr><tr><td align="center">空值</td><td align="center">一个特殊的值</td><td align="center">值是null</td></tr></tbody></table><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p><strong>什么是变量呢？</strong></p><ul><li>变量就是用来存储一个数据的内存区域（就好比盒子），且里面存储的数据是可变的。</li></ul><p><strong>注意事项：</strong></p><ul><li>某个变量存储了其他类型的数据。定义的类型需要存相同类型的数据</li><li>变量的有效范围从定义开始到”}“截止，同一个范围内部不能定义重名的变量。</li><li>自定义变量可以无初始值，但是使用的时候需要赋给初始值，否则会报错。</li></ul><h1 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h1><ul><li>计算机底层都是一些数字电路（开关），开表示0，关表示1，这些01的形式就是二进制。</li></ul><p><strong>计算机的数据单位：</strong></p><ul><li>在计算机中认为一个开关称为1位（b)，每八位一个字节（B），所以1B=8b。</li><li>字节是计算机中数据的最小单位。</li></ul><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p><strong>数据类型的分类</strong></p><ul><li>引用数据类型</li><li>基本数据类型：==4大类8种==</li></ul><table><thead><tr><th align="center">数据类型</th><th align="center">关键字</th><th align="center">取值范围</th><th align="center">内存占用（字节数）</th></tr></thead><tbody><tr><td align="center"></td><td align="center">byte</td><td align="center">-128—127</td><td align="center">1</td></tr><tr><td align="center">整数</td><td align="center">short</td><td align="center">-32768—32767</td><td align="center">2</td></tr><tr><td align="center"></td><td align="center">int</td><td align="center">-2147483648—2147483647</td><td align="center">4</td></tr><tr><td align="center"></td><td align="center">long</td><td align="center">（19位数）</td><td align="center">8</td></tr><tr><td align="center">浮点数</td><td align="center">float</td><td align="center">1.4e-45—3.4e=38</td><td align="center">4</td></tr><tr><td align="center"></td><td align="center">double</td><td align="center">4.9e-324—1.7e+308</td><td align="center">8</td></tr><tr><td align="center">字符</td><td align="center">char</td><td align="center">0—65535</td><td align="center">2</td></tr><tr><td align="center">布尔</td><td align="center">boolean</td><td align="center">true ，false</td><td align="center">1</td></tr></tbody></table><h1 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h1><ul><li>Java自己保留的一些单词作特殊功能之意，如：public，class，byte，short，int，long，double</li><li>不能使用其做类名或者变量名</li><li>关键字很多，不用刻意去记</li></ul><h1 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h1><ul><li>标识符是由一些字符、符号组合起来的名称，用于给类、方法、变量起名的规矩</li><li>基本要求：由字母、下划线、数字、美元符号组成</li><li>强制要求：不能以数字开头、不能是关键字、区分大小写</li><li>变量名称：满足标识符规则，建议全英文、有意义、首字母==小写==，满足驼峰模式，如：int studyNumber=59</li><li>类名称：满足标识符规则，建议全英文、有意义、首字母==大写==，满足驼峰模式，如：HelloWorld.Java</li></ul><h1 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h1><p><strong>自动类型转换</strong></p><ul><li>类型范围小的变量，可以直接赋值给类型范围大的变量</li></ul><p><strong>为何需要进行类型转换？</strong></p><ul><li>存在不同类型的变量赋值给其他类型的变量</li></ul><p><strong>自动类型转换是什么样的？</strong></p><ul><li>类型范围小的变量可以直接赋值给类型范围大的变量</li></ul><p><strong>表达类型的自动转换</strong></p><ul><li><p>在表达式中，小范围类型的变量会自动转换成当前较大范围的类型进行演算</p><p><code>byte、short、char——&gt;int——&gt;long——&gt;float——&gt;double</code></p></li><li><p><strong>注意事项：</strong></p></li><li><p>表达式的最终结果类型由表达式中的最高类型决定。</p></li><li><p>在表达式中，byte、short、char是直接转换成int类型参与运算的。</p></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//注意，两个byte变量相加给的变量应该是int变量，以下为部分代码</span></span><br><span class="line"><span class="keyword">byte</span> i=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">byte</span> j=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> k=i+j;</span><br><span class="line">System.out.println(k);<span class="comment">//int 默认的</span></span><br></pre></td></tr></table></figure><p><strong>强制类型转换</strong></p><ul><li>可以强制将范围大的变量、数据赋值给类型范围小的变量。</li></ul><p><code>数据类型 变量2 =(数据类型)变量1、数据</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//部分代码</span></span><br><span class="line"><span class="keyword">int</span> a=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">byte</span> b=(<span class="keyword">byte</span>)a;</span><br></pre></td></tr></table></figure><ul><li><strong>注意事项</strong></li><li><strong>强制转换类型可能会导致数据丢失或者溢出；</strong></li></ul><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><ul><li>运算符：对字面量或者变量进行操作的符号。</li></ul><p><strong>算数运算符</strong></p><table><thead><tr><th align="center">符号</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">+</td><td align="center">加，连接符</td></tr><tr><td align="center">-</td><td align="center">减</td></tr><tr><td align="center">*</td><td align="center">乘</td></tr><tr><td align="center">/</td><td align="center">除</td></tr><tr><td align="center">%</td><td align="center">取余</td></tr></tbody></table><p><strong>自增自减运算符</strong></p><table><thead><tr><th align="center">符号</th><th align="center">作用</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">++</td><td align="center">自增</td><td align="center">变量自身＋1</td></tr><tr><td align="center">- -</td><td align="center">自减</td><td align="center">变量自身 - 1</td></tr></tbody></table><p><strong>注意</strong>：</p><ul><li><p>++和- -既可以放在变量的后边，也可放在变量前边。</p></li><li><p>以上符号只能操作变量，不能操作字面量的。</p></li><li><p>自增自减运算符单独运算时放在前面或者后面效果一样</p></li><li><p>放在变量前面，先对变量进行+1 -1，再拿变量的值进行运算</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> rs=++a;<span class="comment">//结果：a=11，rs=11</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> b=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> rs= b++;<span class="comment">//结果：b=11，rs=10</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><p><strong>基本赋值运算符</strong></p><ul><li>就是“=”</li></ul><p><strong>扩展运算符</strong></p><table><thead><tr><th align="center">符号</th><th align="center">作用</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">+=</td><td align="center">加后赋值</td><td align="center">a+=b等价于a=a+b</td></tr><tr><td align="center">-=</td><td align="center">减后赋值</td><td align="center">a-=b等价于a=a-b</td></tr><tr><td align="center">*=</td><td align="center">乘后赋值</td><td align="center">a* =b等价于a=a*b</td></tr><tr><td align="center">/=</td><td align="center">除后赋值</td><td align="center">a/ =b等价于a=a/b</td></tr><tr><td align="center">%=</td><td align="center">取余后赋值</td><td align="center">a%=b等价于a=a%b</td></tr></tbody></table><p>==注意：扩展的赋值运算符隐含了强制类型转换==</p><h2 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h2><table><thead><tr><th align="center">符号</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">==</td><td align="center">a==b，判断a和b<code>是否相等</code>，成立为true，不成立为false</td></tr><tr><td align="center">!=</td><td align="center">a!=b，判断a和b<code>是否不相等</code>，成立为true，不成立为false</td></tr><tr><td align="center">&gt;</td><td align="center">a&gt;b，判断a<code>是否大于</code>b，成立为true，不成立为false</td></tr><tr><td align="center">&lt;</td><td align="center">a&lt;b，判断a<code>是否小于</code>b，成立为true，不成立为false</td></tr><tr><td align="center">&gt;=</td><td align="center">a&gt;=b，判断a<code>是否大于等于</code>b，成立为true，不成立为false</td></tr><tr><td align="center">&lt;=</td><td align="center">a&lt;=b，判断a<code>是否小于等于</code>b，成立为true，不成立为false</td></tr></tbody></table><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p><strong>概述</strong></p><ul><li>可以把多个条件的布尔值放在一起运算,最终返回一个布尔结果.</li></ul><table><thead><tr><th align="center">符号</th><th align="center">介绍</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">&amp;</td><td align="center">逻辑与</td><td align="center">必须都为true返回值为true,其余均为false</td></tr><tr><td align="center">|</td><td align="center">逻辑或</td><td align="center">只要有一个为true,结果就是true</td></tr><tr><td align="center">!</td><td align="center">逻辑非</td><td align="center">你真我假,你假我真</td></tr><tr><td align="center">^</td><td align="center">逻辑或异</td><td align="center">如果两个条件都是false或都是true结果为false,两个条件不同结果为true</td></tr></tbody></table><p><strong>短路逻辑运算符</strong></p><table><thead><tr><th align="center">符号</th><th align="center">介绍</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">&amp;&amp;</td><td align="center">短路与</td><td align="center">判断结果和“&amp;”一样,过程是左边为false,右边就不执行了</td></tr><tr><td align="center">||</td><td align="center">短路或</td><td align="center">判断结果与“|”一样,过程是左边为true,右边不执行</td></tr></tbody></table><p><strong>注意:逻辑与或者逻辑或不论左边右边为true或者false,右边都要执行</strong></p><h2 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h2><ul><li><strong>格式:<code>条件表达式?值1:值二;</code></strong></li><li><strong>执行过程:首先计算关系表达式的值,如果值为true,返回值1,如果为false,返回值2</strong></li></ul><h2 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h2><table><thead><tr><th align="center">优先级</th><th align="center">运算符</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">()</td></tr><tr><td align="center">2</td><td align="center">!     -      ++     - -</td></tr><tr><td align="center">3</td><td align="center">*   /   %</td></tr><tr><td align="center">4</td><td align="center">+   -</td></tr><tr><td align="center">5</td><td align="center">&lt;&lt;   &gt;&gt;   &gt;&gt;&gt;</td></tr><tr><td align="center">6</td><td align="center">&lt;   &lt;=   &gt;   &gt;=</td></tr><tr><td align="center">7</td><td align="center">==   !=</td></tr><tr><td align="center">8</td><td align="center">&amp;</td></tr><tr><td align="center">9</td><td align="center">^</td></tr><tr><td align="center">10</td><td align="center">|</td></tr><tr><td align="center">11</td><td align="center">&amp;&amp;</td></tr><tr><td align="center">12</td><td align="center">||</td></tr><tr><td align="center">13</td><td align="center">?:</td></tr><tr><td align="center">14</td><td align="center">=   +=   -=   /=   %=   &amp;=</td></tr></tbody></table><h2 id="键盘录入功能"><a href="#键盘录入功能" class="headerlink" title="键盘录入功能"></a>键盘录入功能</h2><p><strong>键盘录入功能的三个步骤:</strong></p><ol><li>导包:告诉程序去JDK的哪个包中找扫描器技术</li><li>写一行代码,得到键盘扫描器对象</li><li>等待用户输入数据</li></ol><p>例子如下:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson.ifyuju;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IfDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请用户输入自己的成绩：&quot;</span>);</span><br><span class="line">        Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> cj=sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;您的成绩为：&quot;</span>+cj);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h1><h2 id="if分支"><a href="#if分支" class="headerlink" title="if分支"></a>if分支</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson.ifyuju;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IfDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请用户输入自己的成绩：&quot;</span>);</span><br><span class="line">        Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> cj=sc.nextInt();</span><br><span class="line">        <span class="keyword">if</span> (cj&gt;=<span class="number">60</span>&amp;cj&lt;=<span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(cj==<span class="number">60</span>)</span><br><span class="line">                System.out.println(<span class="string">&quot;您的成绩为合格&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(cj&gt;<span class="number">60</span>&amp;cj&lt;=<span class="number">70</span>)</span><br><span class="line">                System.out.println(<span class="string">&quot;您的成绩为良好&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(cj&gt;<span class="number">70</span>&amp;cj&lt;=<span class="number">80</span>)</span><br><span class="line">                System.out.println(<span class="string">&quot;您的成绩为优秀&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(cj&gt;<span class="number">80</span>&amp;cj&lt;=<span class="number">90</span>)</span><br><span class="line">                System.out.println(<span class="string">&quot;您的成绩为很优秀&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(cj&gt;<span class="number">90</span>&amp;cj&lt;=<span class="number">100</span>)</span><br><span class="line">                System.out.println(<span class="string">&quot;您的成绩为超神&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (cj&lt;<span class="number">60</span>&amp;cj&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;您的成绩为不合格&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入错误请重新输入&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="switch分支"><a href="#switch分支" class="headerlink" title="switch分支"></a>switch分支</h2><ul><li>也是匹配条件去执行分支，适合做值匹配的分支选择，结构清晰，格式良好。</li></ul><p><strong>执行流程：</strong></p><ol><li>先执行表达式的值，拿着这个值去和case后的值匹配。</li><li>匹配哪个case的值为true就执行哪个case，遇到brake就跳出switch分支。</li><li>如果case后的值都不匹配则执行default的代码</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwitchDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请用户输入现在是周几：&quot;</span>);</span><br><span class="line">        String date= sc.next();</span><br><span class="line">        <span class="keyword">switch</span> (date)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;周一&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;埋头苦干解决bug&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;周二&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;请求大牛程序员帮忙&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;周三&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;今晚啤酒小龙虾&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;周四&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;帮助新来的女程序员解决bug&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;周五&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;今晚吃鸡&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;周六&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;相亲&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;周日&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;郁郁寡欢&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;输入的值错误，仅限周一至周日&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>if 分支和 switch分支的区别：</strong></p><ul><li>if适合做区间匹配，switch适合做值匹配</li><li>if在功能上远远强大于switch</li></ul><p><strong>switch分支注意事项：</strong></p><ol><li>表达式类型只能为byte、short、int、char、枚举、string，不支持double、float、long</li><li>case给的值不允许重复，且只能是字面量，不能为变量</li><li>不要忘记break，否则会出现穿透现象</li></ol><p><strong>switch穿透性的应用</strong></p><p>案例：用户输入月份查看该月份的天数</p><ul><li>1、3、5、7、8、10、12月是31天</li><li>2月份是闰年为29天，平年为28天</li><li>4、6、9、11月是30天</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwitchDemo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入月份（纯中文，2月需输入二月闰年/二月平年）：&quot;</span>);</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String mouth = sc.next();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (mouth)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;一月&quot;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;三月&quot;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;五月&quot;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;七月&quot;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;八月&quot;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;十月&quot;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;十二月&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;该月份天数为31天&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;四月&quot;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;六月&quot;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;九月&quot;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;十一月&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;该月分天气为30天&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;二月闰年&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;该月天数为29天&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;二月平年&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;该月天数为28天&quot;</span>);</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;输入仅限于中文一到十二月，其中二月分为二月平年和二月闰年，请按规定输入！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h1><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><ul><li>控制一段代码反复执行很多次，先执行两个分号前的内容，如果判断为true，则执行{}里的内容接着执行最后一个分号后的内容</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> a=<span class="number">0</span>;a&lt;<span class="number">3</span>;a++)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;hello,world!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>数字1到5的和</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForDemo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> b=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> a=<span class="number">1</span>;a&lt;=<span class="number">5</span>;a++)&#123;</span><br><span class="line">            b+=a;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;数字1到5的数据和为：&quot;</span>+b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>任意区间的数据和</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForDemo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入开头数字和结尾数字，以便计算此区间内的数字的和&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> b=<span class="number">0</span>;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> a = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> c = sc.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> q=a;q&lt;=c;q++)&#123;</span><br><span class="line">            b+=q;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;数字&quot;</span>+a+<span class="string">&quot;到&quot;</span>+c+<span class="string">&quot;的数据和为：&quot;</span>+b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>1–10的奇数和（方法不止一种）</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForDemo3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i+=<span class="number">2</span>)&#123;</span><br><span class="line">            a+=i;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>水仙花数（结果为：153 370 371 407）</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForDemo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;水仙花数如下：&quot;</span>);</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">100</span>;i&lt;=<span class="number">999</span>;i++)&#123;</span><br><span class="line">           <span class="keyword">int</span> ge=i%<span class="number">10</span>;</span><br><span class="line">           <span class="keyword">int</span> shi=i/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">           <span class="keyword">int</span> bai=i/<span class="number">100</span>;</span><br><span class="line">           <span class="keyword">if</span> (i==ge*ge*ge+bai*bai*bai+shi*shi*shi)&#123;</span><br><span class="line">               System.out.print(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">               count+=<span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">&quot;水仙花数的个数为&quot;</span>+count+<span class="string">&quot;个&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><p><strong>eg：</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WhileDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">3</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Hello,World!&quot;</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="何时用for，何时用while？"><a href="#何时用for，何时用while？" class="headerlink" title="何时用for，何时用while？"></a>何时用for，何时用while？</h2><ul><li>功能上完全一样，for能解决的while也可解决，反之亦然。</li><li>使用规范：知道循环几次建议用for，不知道循环几次建议用while。</li></ul><p><strong>例子：一张0.1mm厚的纸，折叠多少次可以到达珠穆朗玛峰的高度。</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WhileDemo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">double</span> paper=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> ((paper/<span class="number">10</span>)&lt;<span class="number">8848860</span>)&#123;</span><br><span class="line">            paper=Math.pow(<span class="number">2</span>,count);</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;一张厚度为0.1mm的纸想要到达珠穆朗玛峰的高度需要折&quot;</span>+(count-<span class="number">1</span>)+<span class="string">&quot;次&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;z纸张的最终厚度为：&quot;</span>+(paper)/<span class="number">10</span>+<span class="string">&quot;mm&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="do-while循环"><a href="#do-while循环" class="headerlink" title="do-while循环"></a>do-while循环</h2><ul><li>先执行再判断循环条件</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DoWhileDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Hello,world!&quot;</span>);<span class="comment">//循环体结构</span></span><br><span class="line">            i++;<span class="comment">//迭代函数</span></span><br><span class="line">        &#125;<span class="keyword">while</span> (i&lt;<span class="number">3</span>);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三种循环的区别"><a href="#三种循环的区别" class="headerlink" title="三种循环的区别"></a>三种循环的区别</h2><ul><li>for循环和while循环，先判断后执行</li><li>do…while循环，第一次先执行，然后判断</li></ul><h2 id="死循环"><a href="#死循环" class="headerlink" title="死循环"></a>死循环</h2><ul><li>一直循环下去，没有干预无法停止</li></ul><p><strong>写法一</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeadForDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Hello,World!!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>写法二（经典写法）</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeadForDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;hello,world!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>写法三</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeadForDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;hello,world!&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">while</span>(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>密码验证案例</strong></p><p>需求：系统密码为520，请用户输入密码验证，不对时输出密码错误，验证成功输出欢迎进入系统，并且停止程序。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeadForDemo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> Word=<span class="number">520</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;请您输入正确密码：&quot;</span>);</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> TrueWord = sc.nextInt();</span><br><span class="line">            <span class="keyword">if</span> (Word==TrueWord)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;欢迎进入系统&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入正确的密码&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="嵌套循环"><a href="#嵌套循环" class="headerlink" title="嵌套循环"></a>嵌套循环</h2><ul><li>循环中又包含循环</li></ul><p>例子1：比如你有老婆，你不小心犯了错，需要和你老婆说5天，每天三次我爱你</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForForDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;第&quot;</span>+i+<span class="string">&quot;天说：&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;=<span class="number">3</span>; j++) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;第&quot;</span>+j+<span class="string">&quot;次我爱你&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>例子2：打印四行五列*表</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForForDemo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例子3：打印九九乘法表：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForForDemo4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=<span class="number">9</span> ; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;=i; j++) &#123;</span><br><span class="line"></span><br><span class="line">                    System.out.print(i+<span class="string">&quot;*&quot;</span>+j +<span class="string">&quot;=&quot;</span>+(i*j)+<span class="string">&quot;  &quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (i*j&lt;<span class="number">10</span>)&#123;                    <span class="comment">//如果得到的结果小于10，加多一个空格，这样99乘法表不会错位</span></span><br><span class="line">                        System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="跳转关键字：break和continue"><a href="#跳转关键字：break和continue" class="headerlink" title="跳转关键字：break和continue"></a>跳转关键字：break和continue</h1><p>break例子：直接结束大循环（结果为0、1）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BreakAndContinueDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (i==<span class="number">2</span>)&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>continue例子：直接跳过你规定的循环进入下一次循环（结果为0、1、3、4）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BreakAndContinueDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">           </span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (i==<span class="number">2</span>)&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意事项：</strong></p><p>break：只能用于结束所在循环，或者结束所在switch分支的执行。</p><p>continue：只能在循环中使用。</p><h1 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h1><ul><li>作用：用于在程序中获取随机数</li></ul><p><strong>步骤：</strong></p><ol><li>导包：告诉JDK去哪个包找随机数技术</li><li>写一行代码得到随机数对象</li><li>调用随机数功能获得随机数</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成20个范围为1---10的整形随机数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++) &#123;</span><br><span class="line">            Random inter=<span class="keyword">new</span> Random();</span><br><span class="line">            <span class="keyword">int</span> number= inter.nextInt(<span class="number">10</span>)+<span class="number">1</span>;</span><br><span class="line">            System.out.println(number);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例子：猜数字（从1—10的数字之中猜出来正确数字）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomDemo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入你猜的数字：&quot;</span>);</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        Random num=<span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">int</span> number= num.nextInt(<span class="number">10</span>)+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> i = sc.nextInt();</span><br><span class="line">            <span class="keyword">if</span> (i &lt; <span class="number">1</span> | i &gt; <span class="number">10</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;输入有误，请输入1---10的整数&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (number==i)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;恭喜，猜对了！&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (i&gt;number)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;大了，再猜过&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;小了，继续猜&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><ul><li>数组就是用来存储一批同种类型的内存区域</li></ul><h2 id="静态初始化数组"><a href="#静态初始化数组" class="headerlink" title="静态初始化数组"></a>静态初始化数组</h2><ol><li><p>数组的静态初始化的写法和特点：</p><p>数据类型[] ages={12，24，36，48，60};</p><p>完整格式：数据类型[] 数组名 =new 数据类型[]{元素1，2，3，4，…}</p></li><li><p>数组的类型和变量名的存储：</p><ul><li>引用数据类型，存储的数组在内存中的地址信息。</li></ul></li></ol><h2 id="数组的访问"><a href="#数组的访问" class="headerlink" title="数组的访问"></a>数组的访问</h2><ol><li>数组名称[索引]</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayDemo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">double</span>[] scores=&#123;<span class="number">89.9</span>,<span class="number">99.5</span>,<span class="number">59.5</span>,<span class="number">88.0</span>&#125;;</span><br><span class="line">        System.out.println(scores[<span class="number">1</span>]);<span class="comment">//索引</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>数组的长度属性</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayDemo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">double</span>[] scores=&#123;<span class="number">89.9</span>,<span class="number">99.5</span>,<span class="number">59.5</span>,<span class="number">88.0</span>&#125;;</span><br><span class="line">        System.out.println(scores[<span class="number">1</span>]);</span><br><span class="line">        System.out.println(scores.length);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://i.loli.net/2021/11/03/gWXYycxhjLUkIns.png" alt="运行结果"></p><h2 id="数组的注意事项"><a href="#数组的注意事项" class="headerlink" title="数组的注意事项"></a>数组的注意事项</h2><ul><li>“数据类型[]数组名”也可写成“数据类型 数组名[]“。</li><li>什么数据类型的数组存放什么数据类型，否则报错</li><li>数组一旦定义出，程序执行过程中，长度类型就定了</li></ul><h2 id="动态初始化数组"><a href="#动态初始化数组" class="headerlink" title="动态初始化数组"></a>动态初始化数组</h2><p><strong>数组的动态初始化</strong></p><ul><li>定义数组时只确定元素的类型和数组的长度，之后再存入具体数据<code>int mat[]=new int[4];</code></li></ul><p>例子如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayDemo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入四个数字&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> mat[]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">int</span> d=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">            <span class="keyword">int</span> j = sc.nextInt();</span><br><span class="line">            mat[d]=j;</span><br><span class="line">            d++;</span><br><span class="line">          </span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(mat[<span class="number">0</span>]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        System.out.print(mat[<span class="number">1</span>]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        System.out.print(mat[<span class="number">2</span>]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        System.out.print(mat[<span class="number">3</span>]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//随便输入四个整数就会在屏幕上打印出四个数字的结果，存储在数组里</span></span><br></pre></td></tr></table></figure><h2 id="动态初始化数组元素默认值"><a href="#动态初始化数组元素默认值" class="headerlink" title="动态初始化数组元素默认值"></a>动态初始化数组元素默认值</h2><table><thead><tr><th align="center">数据类型</th><th align="center">明细</th><th align="center">默认值</th></tr></thead><tbody><tr><td align="center"></td><td align="center">byte、short、char、int、long</td><td align="center">0</td></tr><tr><td align="center">基本类型</td><td align="center">float、double</td><td align="center">0.0</td></tr><tr><td align="center"></td><td align="center">boolean</td><td align="center">false</td></tr><tr><td align="center">引用类型</td><td align="center">类、接口、数组、String</td><td align="center">null</td></tr></tbody></table><h2 id="两种初始化数组的总结"><a href="#两种初始化数组的总结" class="headerlink" title="两种初始化数组的总结"></a>两种初始化数组的总结</h2><ul><li>动态初始化：只指定数组长度，后期赋值，适合开始知道数据的变量，但是不确定具体元素值的业务场景</li><li>静态初始化：开始就存入元素值，适合一开始就能确定元素值的业务场景</li><li>两种方式的写法独立，不可混用</li></ul><h2 id="数组的遍历"><a href="#数组的遍历" class="headerlink" title="数组的遍历"></a>数组的遍历</h2><ul><li>遍历：一个个数据的访问</li><li>搜索、数据统计等等需要用到遍历</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayDemo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入四个数字&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> mat[]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">int</span> d=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; mat.length; i++) &#123;   <span class="comment">//最好的数组遍历方式，不用写死自己数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">            <span class="keyword">int</span> j = sc.nextInt();</span><br><span class="line">            mat[d]=j;</span><br><span class="line">            d++;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(mat[<span class="number">0</span>]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        System.out.print(mat[<span class="number">1</span>]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        System.out.print(mat[<span class="number">2</span>]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        System.out.print(mat[<span class="number">3</span>]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>例子1：某部门5名员工的销售额分别是：16、26、36、6、100，请计算部门的总销售额</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayPlusDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入5名员工的销售额：&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> money[]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">int</span> d=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">            <span class="keyword">int</span> j = sc.nextInt();</span><br><span class="line">            money[d]=j;</span><br><span class="line">            sum+=money[d];</span><br><span class="line">            d++;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;总销售额为：&quot;</span>+sum+<span class="string">&quot;元&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>例子2：求最大值</strong>（）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson.demo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayMaxDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入你想比较的5个整数：&quot;</span>);</span><br><span class="line">        Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span>[] Ui =<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="keyword">int</span> max=Ui[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> Integer= sc.nextInt();</span><br><span class="line">            Ui[i]=Integer;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (Ui[j]&gt;max)&#123;</span><br><span class="line">                max=Ui[j];</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;最大值为：&quot;</span>+max);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>例子3：生成随机数组猜数组内的一个数字</strong></p><p>实现步骤：</p><ol><li>动态初始化数组，存入5个随机的1–20的数据。</li><li>定义一个死循环，不断的猜数据，遍历数据，判断数据是否在数组中，如果在，进行对应提示并且结束死循环，如果没有猜中，提示继续。</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayGuessNumber</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> [] date=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</span><br><span class="line">        Random r=<span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; date.length; i++) &#123;</span><br><span class="line">            date [i]= r.nextInt(<span class="number">20</span>)+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        OUT:<span class="comment">//定义这个目的是让下列的break可以跳出while的死循环，不仅仅是跳出死循环内的for循环</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入一个1---20之间的整数进行猜测：&quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> guessDate = sc.nextInt();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;date.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (date[i]==guessDate)&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;您猜中了该数据，该数字为第&quot;</span>+(i+<span class="number">1</span>)+<span class="string">&quot;个&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span> OUT;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;猜错了，请重试！！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; date.length;i++) &#123;</span><br><span class="line">            System.out.print(date[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>例子4：随机排名</strong></p><p>输入五个数字，随机打乱排序</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomRanking</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[]Random=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入五位员工的工号：&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Random.length; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> code= sc.nextInt();</span><br><span class="line">            Random[i]=code;</span><br><span class="line">        &#125;</span><br><span class="line">        Random r=<span class="keyword">new</span> Random();<span class="comment">//生成随机的数组的数字</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Random.length; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> index =r.nextInt(Random.length);</span><br><span class="line">            <span class="keyword">int</span> temp=Random[index];<span class="comment">//定义一个整型的临时存储变量，并且将随机生成的数字赋给临时变量</span></span><br><span class="line">            Random[index]=Random[i];<span class="comment">//将随机生成的索引与数组的进行交换</span></span><br><span class="line">            Random[i]=temp;</span><br><span class="line">            System.out.print(Random[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>例子5：数组的排列</strong></p><p>1.冒泡排序法</p><ul><li>思想：每次从数组中找出最大值放在数组的后面去（升序排序）（比如：[2,1,3,4]，逐位比较，最终将最大的那个放在最后面，重复几轮就可以排完序）</li><li>步骤分析：</li></ul><p><img src="https://i.loli.net/2021/11/09/OubifRzvY9rUoAt.png" alt="步骤分析"></p><ul><li><p>确定需要几轮：数组的长度-1</p></li><li><p>每轮比较几次：<img src="https://i.loli.net/2021/11/09/neuPXWtpN97ja52.png"></p></li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MaoPao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr=&#123;<span class="number">5</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=arr.length-<span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//i==1 比较的次数为3 j=0，1，2</span></span><br><span class="line">            <span class="comment">//i==2 比较的次数为3 j=0，1</span></span><br><span class="line">            <span class="comment">//i==3 比较的次数为3 j=0</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length-i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[j]&gt;arr[j+<span class="number">1</span>])&#123;</span><br><span class="line">                    <span class="keyword">int</span> temp=arr[j+<span class="number">1</span>];</span><br><span class="line">                    arr[j+<span class="number">1</span>]=arr[j];</span><br><span class="line">                    arr[j]=temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            System.out.print(arr[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数组的内存图"><a href="#数组的内存图" class="headerlink" title="数组的内存图"></a>数组的内存图</h2><h3 id="Java内存分配"><a href="#Java内存分配" class="headerlink" title="Java内存分配"></a>Java内存分配</h3><ul><li>栈</li><li>堆</li><li>方法区</li><li>本地方法栈</li><li>寄存器</li></ul><p><img src="https://i.loli.net/2021/11/10/WS1NEucVyeBRPmd.png" alt="示例"></p><h3 id="两个变量指向同一个数组"><a href="#两个变量指向同一个数组" class="headerlink" title="两个变量指向同一个数组"></a>两个变量指向同一个数组</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kimtson.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr1=&#123;<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span>[] arr2=arr1;</span><br><span class="line">        System.out.println(arr1);</span><br><span class="line">        System.out.println(arr2);</span><br><span class="line">        arr2[<span class="number">1</span>]=<span class="number">99</span>;</span><br><span class="line">        System.out.println(arr1[<span class="number">1</span>]);</span><br><span class="line">        System.out.println(arr2[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/10/4JpzeLsgvo1hcRB.png" alt="示例"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Java 是什么？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java 是美国Sun公司在199年推出的计算机编程语言，后</summary>
      
    
    
    
    
    <category term="学习心得" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97/"/>
    
    <category term="学习路线" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>markdown学习之路</title>
    <link href="http://example.com/2021/10/12/markdown%E9%80%9F%E6%88%90%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"/>
    <id>http://example.com/2021/10/12/markdown%E9%80%9F%E6%88%90%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/</id>
    <published>2021-10-11T16:00:00.000Z</published>
    <updated>2021-10-16T10:23:54.637Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown-快速学习之路（typora）"><a href="#Markdown-快速学习之路（typora）" class="headerlink" title="Markdown 快速学习之路（typora）"></a>Markdown 快速学习之路（typora）</h1><h2 id="1-代码块："><a href="#1-代码块：" class="headerlink" title="1.代码块："></a>1.代码块：</h2><p>简单的说就是上点号（```)</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//代码块语法</span></span><br><span class="line">``` java</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">``` shell</span><br></pre></td></tr></table></figure><h1 id="2-标题："><a href="#2-标题：" class="headerlink" title="2.标题："></a>2.标题：</h1><p>标题如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">#####五级标题</span><br><span class="line">######六级标题</span><br></pre></td></tr></table></figure><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="3-字体"><a href="#3-字体" class="headerlink" title="3.字体"></a>3.字体</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">加粗：**此处为加粗**</span><br><span class="line">代码块高亮显示：==此处为高亮显示==</span><br><span class="line">删除线：~~此处为删除线~~</span><br><span class="line">斜体：*此处为斜体*</span><br></pre></td></tr></table></figure><p>加粗：<strong>此处为加粗</strong><br>代码块高亮显示：==此处为高亮显示==<br>删除线：<del>此处为删除线</del><br>斜体：<em>此处为斜体</em></p><h1 id="4-引用"><a href="#4-引用" class="headerlink" title="4. 引用"></a>4. 引用</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">引用语法：</span><br><span class="line">&gt;作者：KimTson</span><br><span class="line">&gt;&gt;作者：KimTson</span><br><span class="line">&gt;&gt;&gt;作者：KimTson</span><br><span class="line">&gt;&gt;&gt;&gt;作者：KimTson</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><p>引用语法：</p><blockquote><p>作者：KimTson</p><blockquote><p>作者：KimTson</p><blockquote><p>作者：KimTson</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>作者：KimTson </p></blockquote></blockquote></blockquote></blockquote><h1 id="5-分割线"><a href="#5-分割线" class="headerlink" title="5.分割线"></a>5.分割线</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">分割线<span class="number">1</span>：---</span><br><span class="line">分割线<span class="number">2</span>：***</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><hr><hr><h1 id="6-图片插入"><a href="#6-图片插入" class="headerlink" title="6. 图片插入"></a>6. 图片插入</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">图片形式有两种：本地图片和在线图片：</span><br><span class="line">语法：![我的图片](https:<span class="comment">//pic3.zhimg.com/v2-1c17807cf7a5fd664d6b30ac539b776d_r.jpg?source=1940ef5c)</span></span><br></pre></td></tr></table></figure><p>在线图片效果如下：<img src="https://pic3.zhimg.com/v2-1c17807cf7a5fd664d6b30ac539b776d_r.jpg?source=1940ef5c" alt="我的图片"></p><p>本地图片效果如下：语法：<img src="/images/404.jpg" alt="我的图片"></p><h1 id="7-超链接"><a href="#7-超链接" class="headerlink" title="7.超链接"></a>7.超链接</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">超链接在博客中也比较重要，语法如下：[注释](地址)</span><br></pre></td></tr></table></figure><p>例如：<a href="https://www.zhihu.com/">zhihu</a></p><h1 id="8-列表"><a href="#8-列表" class="headerlink" title="8.列表"></a>8.列表</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">列表分为有序列表和无序列表：</span><br><span class="line">无序列表：</span><br><span class="line">- 目录一</span><br><span class="line">- 目录二</span><br><span class="line">- 目录三</span><br><span class="line">有序列表：</span><br><span class="line">数字＋名称</span><br></pre></td></tr></table></figure><p>例子（无序列表）：</p><ul><li>目录一</li><li>目录二</li><li>目录三</li></ul><p>例子（有序列表）：</p><ol><li>首页</li><li>标签</li><li>吹水</li></ol><h1 id="9-表格"><a href="#9-表格" class="headerlink" title="9. 表格"></a>9. 表格</h1><p>由于语法复杂，故直接快捷键</p><p>效果如下：</p><table><thead><tr><th>语文</th><th>数学</th><th>英语</th></tr></thead><tbody><tr><td>100</td><td>100</td><td>100</td></tr></tbody></table><h1 id="10-引用"><a href="#10-引用" class="headerlink" title="10. 引用"></a>10. 引用</h1><p>语法如下：大于号＋空格</p><p>效果：</p><blockquote><p>“这句话我说的”—–鲁迅</p></blockquote><h1 id="11-未完待续。。。。。。"><a href="#11-未完待续。。。。。。" class="headerlink" title="11.未完待续。。。。。。"></a>11.未完待续。。。。。。</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Markdown-快速学习之路（typora）&quot;&gt;&lt;a href=&quot;#Markdown-快速学习之路（typora）&quot; class=&quot;headerlink&quot; title=&quot;Markdown 快速学习之路（typora）&quot;&gt;&lt;/a&gt;Markdown 快速学习之路（t</summary>
      
    
    
    
    
    <category term="学习" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="语言" scheme="http://example.com/tags/%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>运动世界校园快乐跑步教程（更新中）</title>
    <link href="http://example.com/2021/10/10/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <id>http://example.com/2021/10/10/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</id>
    <published>2021-10-10T10:08:48.289Z</published>
    <updated>2021-10-11T11:47:59.148Z</updated>
    
    <content type="html"><![CDATA[<h1 id="运动世界校园快乐跑步教程（不定期更新）"><a href="#运动世界校园快乐跑步教程（不定期更新）" class="headerlink" title="运动世界校园快乐跑步教程（不定期更新）"></a>运动世界校园快乐跑步教程（不定期更新）</h1><p> 我的2021年最新教程被酷安屏蔽了，我重新写一个会不会再次被ban啊，话说我这教程都存在几个月了，为毛这时候来ban我<br> 不管了，复制粘贴</p><h2 id="教程如下："><a href="#教程如下：" class="headerlink" title="教程如下："></a>教程如下：</h2><p> 2021年运动世界校园root用户最新教程（本人不用虚拟机）<br> 需要apk：运动世界校园（3.20版本），我爱运动，lsposed，fakelocation<br> 方法：<br> 首先你得root，刷magisk，刷riru23.6，刷riru-lsposed，然后去fakelocation交9RMB开个会员（真的不贵）接着重点来了：开好会员后，在fakelocation启用反检测和root检测如下图1-3（图已经设置好）<br> 其次，进入我爱运动（图4），点获取类名（大概率不会获取到），获取不到就复制以下代码：o0OO0o然后保存类名（优先使用）这样xposed检测应该就可以过了，然后你需要进去magisk，打开magiskhide把运动世界校园√上，全选（图5）这样你就应该能进运动世界校园了。<br>    ——————————————————————   </p><h2 id="问答"><a href="#问答" class="headerlink" title="问答"></a>问答</h2><p> q：为什么我摇杆的时候摇杆的方向不会改变呢？<br> a：两条杠里点“相对于设备”<br> q：为什么我不说用run怎么搞运动世界校园的过xposed检测呢？<br> a：虽然本人以前用的是run，但是进入2021年后，run大概率已经不能使用（至少我不能用了，我爱运动真香），如果有hxd需要如何使用run的教程，请看本人上一篇关于运动世界校园自动化教程的文字以及评论区。<br> q：为什么我的运动世界校园GPS总是显示无信号？<br> a：上面说过了，需要先摇杆，让自己“动起来”，然后自然就有GPS信号了。<br> q：搞定以上步骤，我用了我爱运动，但还是过不了运动世界校园的检测（显示需卸载xposed、闪退、卡启动页等）怎么办？<br> a：有可能您使用了run，run已经过时了，请删除。<br> q：进去运动世界校园显示更新，窗口关不掉怎么办？<br> a：先断网，进去运动</p>]]></content>
    
    
    <summary type="html">快乐跑步感想。</summary>
    
    
    
    
    <category term="教程" scheme="http://example.com/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://example.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/10/10/hello-world/"/>
    <id>http://example.com/2021/10/10/hello-world/</id>
    <published>2021-10-10T09:40:08.020Z</published>
    <updated>2021-10-10T09:40:08.020Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
